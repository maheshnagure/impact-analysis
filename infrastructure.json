{
  "apps": [
    {
      "name": "External Client",
      "api": {
        "id": "API_ExternalClient",
        "shape": "square",
        "color": "#8A2BE2",
        "size": 60,
        "position": {
          "x": 50,
          "y": 100
        },
        "endpoint": "/external_client",
        "method": "GET",
        "details": "External Client System",
        "certificates": {
          "keystore": "external_client_keystore.jks",
          "truststore": "external_client_truststore.jks"
        }
      }
    },
    {
      "name": "Developer Portal",
      "api": {
        "id": "API_DeveloperPortal",
        "shape": "square",
        "color": "#20B2AA",
        "size": 50,
        "position": {
          "x": 200,
          "y": 350
        },
        "endpoint": "https://developer_portal",
        "method": "POST",
        "details": "Developer Portal for Onboarding",
        "certificates": {
          "keystore": "developer_portal_keystore.jks",
          "truststore": "developer_portal_truststore.jks"
        }
      }
    },
    {
      "name": "F5",
      "api": {
        "id": "API_F5",
        "shape": "square",
        "color": "#FF6347",
        "size": 50,
        "position": {
          "x": 300,
          "y": 100
        },
        "endpoint": "/f5",
        "method": "GET",
        "details": "Load Balancer",
        "certificates": {
          "keystore": "f5_keystore.jks",
          "truststore": "f5_truststore.jks"
        }
      }
    },
    {
      "name": "APIGW",
      "api": {
        "id": "API_APIGW",
        "shape": "square",
        "color": "#FF6347",
        "size": 70,
        "position": {
          "x": 550,
          "y": 100
        },
        "endpoint": "/apigw",
        "method": "POST",
        "details": "API Gateway",
        "certificates": {
          "keystore": "apigw_keystore.jks",
          "truststore": "apigw_truststore.jks"
        }
      }
    },
    {
      "name": "Auth-Web",
      "api": {
        "id": "API_AuthWeb",
        "shape": "square",
        "color": "#32CD32",
        "size": 90,
        "position": {
          "x": 550,
          "y": 300
        },
        "endpoint": "/secure",
        "method": "POST",
        "details": "Secure Access Layer",
        "certificates": {
          "keystore": "secure_keystore.jks",
          "truststore": "secure_truststore.jks",
          "signing_hsm": "signing_hsm.pem"
        }
      }
    },
    {
      "name": "SPM-EDGE",
      "api": {
        "id": "API_SPMEdge",
        "shape": "square",
        "color": "#32CD32",
        "size": 70,
        "position": {
          "x": 550,
          "y": 700
        },
        "endpoint": "/policy",
        "method": "GET",
        "details": "Policy Enforcement",
        "certificates": {
          "keystore": "policy_keystore.jks",
          "truststore": "policy_truststore.jks"
        }
      }
    },
    {
      "name": "SAS_Database",
      "api": {
        "id": "API_SASDataBase",
        "shape": "cylinder",
        "color": "#32CD32",
        "size": 35,
        "position": {
          "x": 550,
          "y": 500
        },
        "endpoint": "security_db",
        "method": "GET",
        "details": "Security Data Storage",
        "certificates": {
          "keystore": "security_db_keystore.jks",
          "truststore": "security_db_truststore.jks"
        }
      }
    },
    {
      "name": "CaaS",
      "api": {
        "id": "API_CaaS",
        "shape": "square",
        "color": "#4682B4",
        "size": 55,
        "position": {
          "x": 700,
          "y": 350
        },
        "endpoint": "/token",
        "method": "POST",
        "details": "Token Management",
        "certificates": {
          "keystore": "token_keystore.jks",
          "truststore": "token_truststore.jks",
          "signing_key": "signing_key.pem"
        }
      }
    },
    {
      "name": "SIM",
      "api": {
        "id": "API_SIM",
        "shape": "square",
        "color": "#FF69B4",
        "size": 70,
        "position": {
          "x": 200,
          "y": 500
        },
        "endpoint": "/identity",
        "method": "GET",
        "details": "Identity Verification",
        "certificates": {
          "keystore": "identity_keystore.jks",
          "truststore": "identity_truststore.jks"
        }
      }
    },
    {
      "name": "SIM_DataBase",
      "api": {
        "id": "API_SIMDataBase",
        "shape": "cylinder",
        "color": "#FF69B4",
        "size": 35,
        "position": {
          "x": 200,
          "y": 650
        },
        "endpoint": "/db",
        "method": "GET",
        "details": "Identity Database",
        "certificates": {
          "keystore": "db_keystore.jks",
          "truststore": "db_truststore.jks"
        }
      }
    },
    {
      "name": "Internal Service Provider Application",
      "api": {
        "id": "API_InternalServiceProvider",
        "shape": "square",
        "color": "#FFD700",
        "size": 60,
        "position": {
          "x": 850,
          "y": 100
        },
        "endpoint": "/internal_service_Provider",
        "method": "POST",
        "details": "Internal Service Provider Application",
        "certificates": {
          "keystore": "internal_service_keystore.jks",
          "truststore": "internal_service_truststore.jks"
        }
      }
    },
    {
      "name": "Internal Service Consumer Application",
      "api": {
        "id": "API_InternalServiceConsumer",
        "shape": "square",
        "color": "#FFD700",
        "size": 60,
        "position": {
          "x": 850,
          "y": 200
        },
        "endpoint": "/internal_service_Consumer",
        "method": "POST",
        "details": "Internal Service Consumer Application",
        "certificates": {
          "keystore": "internal_service_keystore.jks",
          "truststore": "internal_service_truststore.jks"
        }
      }
    },
    {
      "name": "Polaris",
      "api": {
        "id": "API_Polaris",
        "shape": "square",
        "color": "#FF00FF",
        "size": 40,
        "position": {
          "x": 850,
          "y": 390
        },
        "endpoint": "/polaris",
        "method": "POST",
        "details": "Polaris System",
        "certificates": {
          "keystore": "polaris_keystore.jks",
          "truststore": "polaris_truststore.jks"
        }
      }
    },
    {
      "name": "Bitbucket",
      "api": {
        "id": "API_Bitbucket",
        "shape": "square",
        "color": "#1E90FF",
        "size": 45,
        "position": {
          "x": 850,
          "y": 500
        },
        "endpoint": "/bitbucket",
        "method": "POST",
        "details": "Bitbucket Repository System",
        "certificates": {
          "keystore": "bitbucket_keystore.jks",
          "truststore": "bitbucket_truststore.jks"
        }
      }
    },
    {
      "name": "Jenkins-Hook",
      "api": {
        "id": "API_JenkinsHook",
        "shape": "square",
        "color": "#32CD32",
        "size": 55,
        "position": {
          "x": 700,
          "y": 500
        },
        "endpoint": "/jenkins-hook",
        "method": "POST",
        "details": "Jenkins Webhook Trigger",
        "certificates": {
          "keystore": "jenkins_hook_keystore.jks",
          "truststore": "jenkins_hook_truststore.jks"
        }
      }
    },
    {
      "name": "spm-admin",
      "api": {
        "id": "API_SPMAdmin",
        "shape": "square",
        "color": "#32CD32",
        "size": 55,
        "position": {
          "x": 700,
          "y": 600
        },
        "endpoint": "/spm-admin",
        "method": "POST",
        "details": "SPM Admin Service",
        "certificates": {
          "keystore": "spm_admin_keystore.jks",
          "truststore": "spm_admin_truststore.jks"
        }
      }
    },
    {
      "name": "spm-dispatcher",
      "api": {
        "id": "API_SPMDispatcher",
        "shape": "square",
        "color": "#32CD32",
        "size": 55,
        "position": {
          "x": 700,
          "y": 700
        },
        "endpoint": "spm-dispatcher",
        "method": "POST",
        "details": "SPM Dispatcher Service",
        "certificates": {
          "keystore": "spm_dispatcher_keystore.jks",
          "truststore": "spm_dispatcher_truststore.jks"
        }
      }
    },
    {
      "name": "Internal Developer",
      "api": {
        "id": "API_InternalDeveloper",
        "shape": "square",
        "color": "#FFA07A",
        "size": 45,
        "position": {
          "x": 850,
          "y": 300
        },
        "endpoint": "/internal-developer",
        "method": "POST",
        "details": "Internal Developer initiating policy onboarding",
        "certificates": {
          "keystore": "internal_developer_keystore.jks",
          "truststore": "internal_developer_truststore.jks"
        }
      }
    },
    {
      "name": "External Web-Client",
      "api": {
        "id": "API_ExternalWebClient",
        "shape": "square",
        "color": "#FF6347",
        "size": 60,
        "position": {
          "x": 50,
          "y": 200
        },
        "endpoint": "/api/webclient",
        "method": "POST",
        "details": "External web client for authentication",
        "certificates": {
          "keystore": "webclient_keystore.jks",
          "truststore": "webclient_truststore.jks"
        }
      }
    },
    {
      "name": "Heracles",
      "api": {
        "id": "API_Heracles",
        "shape": "square",
        "color": "#4682B4",
        "size": 60,
        "position": {
          "x": 300,
          "y": 200
        },
        "endpoint": "/api/heracles",
        "method": "POST",
        "details": "Proxy authentication service",
        "certificates": {
          "keystore": "heracles_keystore.jks",
          "truststore": "heracles_truststore.jks",
          "signing_cert": "heracles_signing_cert.pem"
        }
      }
    },
    {
      "name": "User-Auth",
      "api": {
        "id": "API_UserAuth",
        "shape": "square",
        "color": "#32CD32",
        "size": 80,
        "position": {
          "x": 400,
          "y": 300
        },
        "endpoint": "/api/userauth",
        "method": "POST",
        "details": "User authentication service",
        "certificates": {
          "keystore": "userauth_keystore.jks",
          "truststore": "userauth_truststore.jks"
        }
      }
    },
    {
      "name": "RapidAuth",
      "api": {
        "id": "API_RapidAuth",
        "shape": "square",
        "color": "#FF69B4",
        "size": 60,
        "position": {
          "x": 400,
          "y": 500
        },
        "endpoint": "/api/rapidauth",
        "method": "POST",
        "details": "Rapid authentication verification",
        "certificates": {
          "keystore": "rapidauth_keystore.jks",
          "truststore": "rapidauth_truststore.jks",
          "signing_hsm": "rapidauth_signing_hsm.pem"
        }
      }
    },
    {
      "name": "RapidAuthDB",
      "api": {
        "id": "API_RapidAuthDB",
        "shape": "cylinder",
        "color": "#FF69B4",
        "size": 35,
        "position": {
          "x": 400,
          "y": 650
        },
        "endpoint": "/api/rapidauthdb",
        "method": "POST",
        "details": "RapidAuth Database for Key Storage",
        "certificates": {
          "keystore": "rapidauthdb_keystore.jks",
          "truststore": "rapidauthdb_truststore.jks"
        }
      }
    },
    {
      "name": "Axon",
      "api": {
        "id": "API_Axon",
        "shape": "square",
        "color": "#4682B4",
        "size": 55,
        "position": {
          "x": 550,
          "y": 600
        },
        "endpoint": "/api/axon",
        "method": "POST",
        "details": "Event Publishing Service",
        "certificates": {
          "keystore": "axon_keystore.jks",
          "truststore": "axon_truststore.jks",
          "signing_key": "axon_signing_key.pem"
        }
      }
    }
  ],
  "connections": [
    {
      "source": "API_F5",
      "target": "API_APIGW",
      "mtls": "enabled"
    },
    {
      "source": "API_APIGW",
      "target": "API_AuthWeb",
      "mtls": "enabled"
    },
    {
      "source": "API_AuthWeb",
      "target": "API_SASDataBase",
      "mtls": "enabled"
    },
    {
      "source": "API_AuthWeb",
      "target": "API_CaaS",
      "mtls": "enabled"
    },
    {
      "source": "API_AuthWeb",
      "target": "API_SIM",
      "mtls": "enabled"
    },
    {
      "source": "API_APIGW",
      "target": "API_AuthWeb",
      "mtls": "enabled"
    },
    {
      "source": "API_APIGW",
      "target": "API_CaaS",
      "mtls": "enabled"
    },
    {
      "source": "API_SPMEdge",
      "target": "API_SASDataBase",
      "mtls": "enabled"
    },
    {
      "source": "API_SIM",
      "target": "API_SIMDataBase",
      "mtls": "enabled"
    },
    {
      "source": "API_APIGW",
      "target": "API_InternalServiceProvider",
      "mtls": "enabled"
    },
    {
      "source": "API_Polaris",
      "target": "API_Bitbucket",
      "mtls": "enabled"
    },
    {
      "source": "API_Bitbucket",
      "target": "API_JenkinsHook",
      "mtls": "enabled"
    },
    {
      "source": "API_JenkinsHook",
      "target": "API_SPMAdmin",
      "mtls": "enabled"
    },
    {
      "source": "API_SPMAdmin",
      "target": "API_SPMDispatcher",
      "mtls": "enabled"
    },
    {
      "source": "API_SPMDispatcher",
      "target": "API_SPMEdge",
      "mtls": "enabled"
    },
    {
      "source": "API_InternalDeveloper",
      "target": "API_Polaris",
      "mtls": "enabled"
    },
    {
      "source": "API_Polaris",
      "target": "API_InternalDeveloper",
      "mtls": "enabled"
    },
    {
      "source": "API_ExternalWebClient",
      "target": "API_Heracles",
      "mtls": "enabled"
    },
    {
      "source": "API_Heracles",
      "target": "API_UserAuth",
      "mtls": "enabled"
    },
    {
      "source": "API_UserAuth",
      "target": "API_RapidAuth",
      "mtls": "enabled"
    },
    {
      "source": "API_RapidAuth",
      "target": "API_RapidAuthDB",
      "mtls": "enabled"
    },
    {
      "source": "API_RapidAuth",
      "target": "API_Axon",
      "mtls": "enabled"
    }
  ],
  "blueprint": {
    "flows": {
      "inbound_traffic": [
        {
          "type": "inbound_flow",
          "name": "Inbound Traffic Flow",
          "color": "#00FF00",
          "conditions": [
            {
              "id": "no-cache",
              "name": "No-Cache",
              "path": [
                "API_ExternalClient",
                "API_F5",
                "API_APIGW",
                "API_AuthWeb",
                "API_SASDataBase",
                "API_AuthWeb",
                "API_SIM",
                "API_SIMDataBase",
                "API_SIM",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_SASDataBase",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_CaaS",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_APIGW",
                "API_InternalServiceProvider",
                "API_APIGW",
                "API_F5",
                "API_ExternalClient"
              ],
              "labels": [
                {
                  "text": "InBound Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "SSL Termination",
                  "color": "#FFFFFF"
                },
                {
                  "text": "HTTP header with ClientDN string",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Query for ClientDN",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Extract ClientID",
                  "color": "#FFFFFF"
                },
                {
                  "text": "FallBack: Query for ClientDN",
                  "color": "#FFFF00"
                },
                {
                  "text": "Query ClientDN",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Extract ClientDN(Identity)",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Return ClientID (AuthN Success)",
                  "color": "#FFFF00"
                },
                {
                  "text": "AuthN Success",
                  "color": "#FFFF00",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -360
                  }
                },
                {
                  "text": "Request for policy(service:namespace:URI:Method)",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Respond with Provider & client Policy",
                  "color": "#FFFFFF"
                },
                {
                  "text": "AuthZ Success",
                  "color": "#FFA500",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -350
                  }
                },
                {
                  "text": "Request to sign Token",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Signed Token",
                  "color": "#FFD700"
                },
                {
                  "text": "TokenGen Success",
                  "color": "#FFA500",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -340
                  }
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Process Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Return Processed Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                }
              ],
              "decisions": [
                {
                  "step": 3,
                  "outcome": "success"
                },
                {
                  "step": 7,
                  "outcome": "success"
                },
                {
                  "step": 10,
                  "outcome": "success"
                },
                {
                  "step": 13,
                  "outcome": "success"
                },
                {
                  "step": 15,
                  "outcome": "success"
                },
                {
                  "step": 16,
                  "outcome": "success"
                }
              ],
              "pause": 2000
            },
            {
              "id": "cached",
              "name": "Cached",
              "path": [
                "API_ExternalClient",
                "API_F5",
                "API_APIGW",
                "API_AuthWeb",
                "API_SASDataBase",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_CaaS",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_APIGW",
                "API_InternalServiceProvider",
                "API_APIGW",
                "API_F5",
                "API_ExternalClient"
              ],
              "labels": [
                {
                  "text": "Inbound Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "SSL Termination",
                  "color": "#FFFFFF"
                },
                {
                  "text": "HTTP header with ClientDN string",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Query for ClientDN",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Extract Cached ClientID",
                  "color": "#FFFFFF"
                },
                {
                  "text": "AuthN Success",
                  "color": "#FFFF00",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -360
                  }
                },
                {
                  "text": "AuthZ Success",
                  "color": "#FFA500",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -350
                  }
                },
                {
                  "text": "Request to sign Token",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Signed Token",
                  "color": "#FFD700"
                },
                {
                  "text": "TokenGen Success",
                  "color": "#FFA500",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -340
                  }
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Process Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Return Processed Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                }
              ],
              "decisions": [
                {
                  "step": 4,
                  "outcome": "success"
                },
                {
                  "step": 9,
                  "outcome": "success"
                },
                {
                  "step": 12,
                  "outcome": "success"
                },
                {
                  "step": 15,
                  "outcome": "success"
                },
                {
                  "step": 16,
                  "outcome": "success"
                }
              ],
              "pause": 2000
            }
          ]
        }
      ],
      "onboarding": [
        {
          "type": "consumer_onboarding",
          "name": "Consumer Onboarding via Developer Portal",
          "color": "#8A2BE2",
          "path": [
            "API_ExternalClient",
            "API_DeveloperPortal",
            "API_SIM",
            "API_SIMDataBase",
            "API_SIM",
            "API_DeveloperPortal",
            "API_ExternalClient"
          ],
          "labels": [
            {
              "text": "Request to create project",
              "color": "#FFFFFF"
            },
            {
              "text": "Provision ProjectID:KeyID",
              "color": "#FFFFFF"
            },
            {
              "text": "Provision ProjectID:KeyID & details",
              "color": "#FFFFFF"
            },
            {
              "text": "Provisioning response",
              "color": "#FFFFFF"
            },
            {
              "text": "Onboarding complete",
              "color": "#FFFFFF"
            }
          ],
          "pause": 2000
        }
      ],
      "internal_traffic": [
        {
          "type": "internal_traffic",
          "name": "Internal Traffic Flow",
          "color": "#00A1D6",
          "path": [
            "API_InternalServiceConsumer",
            "API_AuthWeb",
            "API_SASDataBase",
            "API_AuthWeb",
            "API_CaaS",
            "API_AuthWeb",
            "API_InternalServiceConsumer"
          ],
          "pause": 2000
        }
      ],
      "openapi_flow": [
        {
          "type": "openapi_flow",
          "name": "OpenAPI Flow",
          "color": "#FFA500",
          "conditions": [
            {
              "id": "No-cache",
              "name": "No-cache",
              "path": [
                "API_ExternalClient",
                "API_F5",
                "API_APIGW",
                "API_AuthWeb",
                "API_SASDataBase",
                "API_AuthWeb",
                "API_SIM",
                "API_SIMDataBase",
                "API_SIM",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_SASDataBase",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_CaaS",
                "API_AuthWeb",
                "API_AuthWeb",
                "API_APIGW",
                "API_InternalServiceProvider",
                "API_APIGW",
                "API_F5",
                "API_ExternalClient"
              ],
              "labels": [
                {
                  "text": "InBound Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "SSL Termination",
                  "color": "#FFFFFF"
                },
                {
                  "text": "HTTP header with ClientDN string",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Query for ProjectID",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Return KeyIDs and Services",
                  "color": "#FFFFFF"
                },
                {
                  "text": "FallBack: Query for ProjectID",
                  "color": "#FFFF00"
                },
                {
                  "text": "Query ProjectID",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Return KeyIDs and Services",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Return ProjectID related details (AuthN Success)",
                  "color": "#FFFF00"
                },
                {
                  "text": "AuthN Success",
                  "color": "#FFFF00",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -360
                  }
                },
                {
                  "text": "Request for policy(service:namespace:URI:Method)",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Respond with Provider Policy (no ClientPolicy for OPENAPI flow)",
                  "color": "#FFFFFF"
                },
                {
                  "text": "AuthZ Success",
                  "color": "#FFA500",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -350
                  }
                },
                {
                  "text": "Request to sign Token(AuthType-Oauth)",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Signed Token",
                  "color": "#FFD700"
                },
                {
                  "text": "TokenGen Success",
                  "color": "#FFA500",
                  "position": {
                    "x_offset": -750,
                    "y_offset": -340
                  }
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Process Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Return Processed Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Response",
                  "color": "#FFFFFF"
                }
              ],
              "decisions": [
                {
                  "step": 3,
                  "outcome": "success"
                },
                {
                  "step": 7,
                  "outcome": "success"
                },
                {
                  "step": 10,
                  "outcome": "success"
                },
                {
                  "step": 13,
                  "outcome": "success"
                },
                {
                  "step": 15,
                  "outcome": "success"
                },
                {
                  "step": 16,
                  "outcome": "success"
                }
              ],
              "pause": 2000
            }
          ]
        }
      ],
      "policy_onboarding": [
        {
          "type": "policy_onboarding",
          "name": "Policy Onboarding Flow",
          "color": "#FF1493",
          "path": [
            "API_InternalDeveloper",
            "API_Polaris",
            "API_Bitbucket",
            "API_JenkinsHook",
            "API_SPMAdmin",
            "API_SPMDispatcher",
            "API_SPMEdge",
            "API_SASDataBase"
          ],
          "labels": [
            {
              "text": "Internal Developer fills Polaris form",
              "color": "#FFFFFF"
            },
            {
              "text": "Raise PR",
              "color": "#FFFFFF"
            },
            {
              "text": "PR Approved",
              "color": "#FFFFFF"
            },
            {
              "text": "Publish call to SPM-Admin",
              "color": "#FFFFFF"
            },
            {
              "text": "Dispatch call to SPM-Dispatcher",
              "color": "#FFFFFF"
            },
            {
              "text": "Publish new policy to SPM-EDGE",
              "color": "#FFFFFF"
            },
            {
              "text": "Publish new policy to DB",
              "color": "#FFFFFF"
            }
          ],
          "pause": 2000
        }
      ],
      "rapid_auth": [
        {
          "type": "rapid_auth_flow",
          "name": "RapidAuth-API Flow",
          "color": "#FF4500",
          "conditions": [
            {
              "id": "authentication_call",
              "name": "Authentication Call",
              "path": [
                "API_ExternalWebClient",
                "API_Heracles",
                "API_UserAuth",
                "API_SIM",
                "API_UserAuth",
                "API_RapidAuth",
                "API_UserAuth",
                "API_CaaS",
                "API_UserAuth",
                "API_Heracles",
                "API_ExternalWebClient"
              ],
              "labels": [
                {
                  "text": "Biometric Auth Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Authenticate Request",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Retrieve User Profile",
                  "color": "#FFFFFF"
                },
                {
                  "text": "User Profile Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Biometric Authentication",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Biometric Auth Response",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Sign Token",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Signed Token",
                  "color": "#FFFFFF"
                },
                {
                  "text": "AuthN Success & Token",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Authentication Success",
                  "color": "#FFFFFF"
                }
              ],
              "decisions": [
                {
                  "step": 5,
                  "outcome": "success"
                }
              ],
              "pause": 2000
            },
            {
              "id": "biometric_registration",
              "name": "BioMetric Registration",
              "path": [
                "API_ExternalWebClient",
                "API_Heracles",
                "API_Heracles",
                "API_RapidAuth",
                "API_RapidAuthDB",
                "API_RapidAuth",
                "API_Axon",
                "API_RapidAuth",
                "API_Heracles",
                "API_ExternalWebClient"
              ],
              "labels": [
                {
                  "text": "Register Public Key",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Internal Validation",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Provision Public Key",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Store Key",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Key Stored",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Publish Event",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Event Published",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Registration Successful",
                  "color": "#FFFFFF"
                },
                {
                  "text": "Registration Successful",
                  "color": "#FFFFFF"
                }
              ],
              "decisions": [
                {
                  "step": 4,
                  "outcome": "success"
                }
              ],
              "pause": 2000
            }
          ]
        }
      ]
    },
    "static_info": [
      {
        "text": "Cache Configuration:",
        "font_size": "14px",
        "font_weight": "bold",
        "color": "#FFFFFF"
      },
      {
        "text": "In-Memory Cache:",
        "font_size": "14px",
        "font_weight": "bold",
        "color": "#00FF00"
      },
      {
        "text": "Stored within the app server for ultra-fast, local access. Holds:",
        "color": "#00FF00"
      },
      {
        "text": "  - Policy Data",
        "color": "#00FF00"
      },
      {
        "text": "  - Public Key Data",
        "color": "#00FF00"
      },
      {
        "text": "Redis Cache:",
        "font_size": "14px",
        "font_weight": "bold",
        "color": "#FFD700"
      },
      {
        "text": "Persistence, centralized in-memory store. Holds:",
        "color": "#FFD700"
      },
      {
        "text": "  - Policy Data",
        "color": "#FFD700"
      },
      {
        "text": "  - Public Key Data",
        "color": "#FFD700"
      },
      {
        "text": "  - UserData",
        "color": "#FFD700"
      },
      {
        "text": "Schedulers:",
        "font_size": "14px",
        "font_weight": "bold",
        "color": "#FFFFFF"
      },
      {
        "text": "Hydrate Policy Data:"
      },
      {
        "text": "  - At Service Deployment/boot-up time",
        "color": "#FF6F61"
      },
      {
        "text": "  - PolicySyncScheduler - every 15sec",
        "color": "#FF6F61"
      },
      {
        "text": "Hydrate Signer Key:"
      },
      {
        "text": "  - PublicKeySyncScheduler - every 15min",
        "color": "#FF6F61"
      },
      {
        "text": "APIGW Cache:",
        "font_size": "14px",
        "font_weight": "bold",
        "color": "#FFFFFF"
      },
      {
        "text": "Cache Http 200 results for 15sec"
      }
    ]
  }
}
